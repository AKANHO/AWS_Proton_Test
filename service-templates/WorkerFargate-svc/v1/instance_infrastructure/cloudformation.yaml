AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service on AWS Fargate, hosted in a public/private subnet, and accessible via a public load balancer.

Resources:
  ServiceEcsProcessingDeadLetterQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: 1209600
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ServiceEcsProcessingQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt 
          - ServiceEcsProcessingDeadLetterQueue
          - Arn
        maxReceiveCount: 3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ServiceQueueProcessingTaskDefTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
  ServiceQueueProcessingTaskDefTaskRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'sqs:ReceiveMessage'
              - 'sqs:ChangeMessageVisibility'
              - 'sqs:GetQueueUrl'
              - 'sqs:DeleteMessage'
              - 'sqs:GetQueueAttributes'
            Effect: Allow
            Resource: !GetAtt 
              - ServiceEcsProcessingQueue
              - Arn
        Version: 2012-10-17
      PolicyName: ServiceQueueProcessingTaskDefTaskRoleDefaultPolicy
      Roles:
        - !Ref ServiceQueueProcessingTaskDefTaskRole
  ServiceQueueProcessingTaskDef:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: QUEUE_NAME
              Value: !GetAtt 
                - ServiceEcsProcessingQueue
                - QueueName
          Essential: true
          Image: '{{service_instance.inputs.image}}'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: ServiceQueueProcessingTaskDefLogGroup
              awslogs-stream-prefix: '{{service.name}}/{{service_instance.name}}'
              awslogs-region: !Ref 'AWS::Region'
          Name: '{{service_instance.name}}'
      Cpu: '256'
      ExecutionRoleArn: '{{environment.outputs.ServiceTaskDefExecutionRoleArn}}'
      Family: '{{service.name}}_{{service_instance.name}}'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt 
        - ServiceQueueProcessingTaskDefTaskRole
        - Arn
  ServiceQueueProcessingTaskDefLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      LogGroupName: '{{service.name}}/{{service_instance.name}}'
  ServiceQueueProcessingFargateService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: '{{environment.outputs.Cluster}}'
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt 
              - ServiceQueueProcessingFargateServiceSecurityGroup
              - GroupId
          Subnets:
            - '{{environment.outputs.PublicSubnet1}}'
            - '{{environment.outputs.PublicSubnet2}}'
      TaskDefinition: !Ref ServiceQueueProcessingTaskDef
  ServiceQueueProcessingFargateServiceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Automatically created Security Group for WorkerFargate Service
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId: '{{environment.outputs.VPC}}'
  ServiceQueueProcessingFargateServiceTaskCountTarget:
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Join 
        - ''
        - - service/
          - '{{environment.outputs.Cluster}}'
          - /
          - !GetAtt 
            - ServiceQueueProcessingFargateService
            - Name
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
  ServiceQueueProcessingFargateServiceTaskCountTargetCpuScaling:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: WorkerFargateServiceTaskCountTargetCpuScaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ServiceQueueProcessingFargateServiceTaskCountTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 50
  ServiceQueueProcessingFargateServiceTaskCountTargetQueueMessagesVisibleScalingLowerPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: WorkerFargateServiceTaskCountTargetQueueMessagesVisibleScalingLowerPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ServiceQueueProcessingFargateServiceTaskCountTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        MetricAggregationType: Maximum
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1
  ServiceQueueProcessingFargateServiceTaskCountTargetQueueMessagesVisibleScalingLowerAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions: !Ref ServiceQueueProcessingFargateServiceTaskCountTargetQueueMessagesVisibleScalingLowerPolicy
      AlarmDescription: Lower threshold scaling alarm
      Dimensions:
        - Name: QueueName
          Value: !GetAtt 
            - ServiceEcsProcessingQueue
            - QueueName
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Maximum
      Threshold: 0
  ServiceQueueProcessingFargateServiceTaskCountTargetQueueMessagesVisibleScalingUpperPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: WorkerFargateServiceTaskCountTargetQueueMessagesVisibleScalingUpperPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ServiceQueueProcessingFargateServiceTaskCountTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        MetricAggregationType: Maximum
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 400
            ScalingAdjustment: 1
          - MetricIntervalLowerBound: 400
            ScalingAdjustment: 5
  ServiceQueueProcessingFargateServiceTaskCountTargetQueueMessagesVisibleScalingUpperAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions: !Ref ServiceQueueProcessingFargateServiceTaskCountTargetQueueMessagesVisibleScalingUpperPolicy
      AlarmDescription: Upper threshold scaling alarm
      Dimensions:
        - Name: QueueName
          Value: !GetAtt 
            - ServiceEcsProcessingQueue
            - QueueName
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Maximum
      Threshold: 100
Outputs:
  ServiceSQSDeadLetterQueue:
    Value: !GetAtt 
      - ServiceEcsProcessingDeadLetterQueue
      - QueueName
  ServiceSQSDeadLetterQueueArn:
    Value: !GetAtt 
      - ServiceEcsProcessingDeadLetterQueue
      - Arn
  ServiceSQSQueue:
    Value: !GetAtt 
      - ServiceEcsProcessingQueue
      - QueueName
  ServiceSQSQueueArn:
    Value: !GetAtt 
      - ServiceEcsProcessingQueue
      - Arn
